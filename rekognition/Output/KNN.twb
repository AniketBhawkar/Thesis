<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='KNN' inline='true' name='federated.1ogj73k050xtn6158xpcx1gvdtun' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='KNN' name='textscan.0nme5u40mc3o9t1h9menq1eeivtp'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='F:/Masters/Semester 3/Thesis/rekognition/Output/KNN.csv' dataRefreshTime='' directory='F:/Masters/Semester 3/Thesis/rekognition/Output' filename='C:/Users/Aniket/AppData/Local/Temp/TableauTemp/0tibds21mt41hx1fqgqrv1r9fl5s/KNN.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0nme5u40mc3o9t1h9menq1eeivtp' name='KNN.csv' table='[KNN#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:G10:no:A1:G10:1' header='no' locale='en_IN' separator=','>
            <column datatype='string' name='KNN' ordinal='0' />
            <column datatype='real' name='50' ordinal='1' />
            <column datatype='real' name='100' ordinal='2' />
            <column datatype='real' name='150' ordinal='3' />
            <column datatype='real' name='200' ordinal='4' />
            <column datatype='real' name='250' ordinal='5' />
            <column datatype='real' name='290' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>KNN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[KNN]</local-name>
            <parent-name>[KNN.csv]</parent-name>
            <remote-alias>KNN</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>50</remote-name>
            <remote-type>5</remote-type>
            <local-name>[50]</local-name>
            <parent-name>[KNN.csv]</parent-name>
            <remote-alias>50</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>100</remote-name>
            <remote-type>5</remote-type>
            <local-name>[100]</local-name>
            <parent-name>[KNN.csv]</parent-name>
            <remote-alias>100</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>150</remote-name>
            <remote-type>5</remote-type>
            <local-name>[150]</local-name>
            <parent-name>[KNN.csv]</parent-name>
            <remote-alias>150</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>200</remote-name>
            <remote-type>5</remote-type>
            <local-name>[200]</local-name>
            <parent-name>[KNN.csv]</parent-name>
            <remote-alias>200</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>250</remote-name>
            <remote-type>5</remote-type>
            <local-name>[250]</local-name>
            <parent-name>[KNN.csv]</parent-name>
            <remote-alias>250</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>290</remote-name>
            <remote-type>5</remote-type>
            <local-name>[290]</local-name>
            <parent-name>[KNN.csv]</parent-name>
            <remote-alias>290</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[KNN.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10:no:A1:G10:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>54</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[100]' role='measure' type='quantitative' />
      <column datatype='real' name='[150]' role='measure' type='quantitative' />
      <column datatype='real' name='[200]' role='measure' type='quantitative' />
      <column datatype='real' name='[250]' role='measure' type='quantitative' />
      <column datatype='real' name='[290]' role='measure' type='quantitative' />
      <column datatype='real' name='[50]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:290:qk]&quot;' value='291' />
        </aliases>
      </column>
      <column datatype='string' name='[KNN]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[KNN]' derivation='None' name='[none:KNN:nk]' pivot='key' type='nominal' />
      <column-instance column='[100]' derivation='Sum' name='[sum:100:qk]' pivot='key' type='quantitative' />
      <column-instance column='[150]' derivation='Sum' name='[sum:150:qk]' pivot='key' type='quantitative' />
      <column-instance column='[200]' derivation='Sum' name='[sum:200:qk]' pivot='key' type='quantitative' />
      <column-instance column='[250]' derivation='Sum' name='[sum:250:qk]' pivot='key' type='quantitative' />
      <column-instance column='[290]' derivation='Sum' name='[sum:290:qk]' pivot='key' type='quantitative' />
      <column-instance column='[50]' derivation='Sum' name='[sum:50:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.420655' measure-ordering='alphabetic' measure-percentage='0.579345' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:100:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:290:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:250:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:200:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:50:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:150:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:KNN:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;f1-score (macro)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;precision (macro)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;recall (macro)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;f1-score (weighted)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;precision (weighted)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;recall (weighted)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;f1-score (micro)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;precision (micro)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;recall (micro)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='F1-Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='KNN' name='federated.1ogj73k050xtn6158xpcx1gvdtun' />
          </datasources>
          <datasource-dependencies datasource='federated.1ogj73k050xtn6158xpcx1gvdtun'>
            <column datatype='real' name='[100]' role='measure' type='quantitative' />
            <column datatype='real' name='[150]' role='measure' type='quantitative' />
            <column datatype='real' name='[200]' role='measure' type='quantitative' />
            <column datatype='real' name='[250]' role='measure' type='quantitative' />
            <column datatype='real' name='[290]' role='measure' type='quantitative' />
            <column datatype='real' name='[50]' role='measure' type='quantitative' />
            <column datatype='string' name='[KNN]' role='dimension' type='nominal' />
            <column-instance column='[KNN]' derivation='None' name='[none:KNN:nk]' pivot='key' type='nominal' />
            <column-instance column='[100]' derivation='Sum' name='[sum:100:qk]' pivot='key' type='quantitative' />
            <column-instance column='[150]' derivation='Sum' name='[sum:150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[200]' derivation='Sum' name='[sum:200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[250]' derivation='Sum' name='[sum:250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[290]' derivation='Sum' name='[sum:290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[50]' derivation='Sum' name='[sum:50:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:50:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:100:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:150:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:200:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:250:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:290:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:50:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:100:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:150:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:200:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:250:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:290:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:KNN:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;precision (macro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;precision (micro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;precision (weighted)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;recall (macro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;recall (micro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;recall (weighted)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' value='27' />
            <encoding attr='space' class='1' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' value='15' />
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' value='15' />
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' value='15' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='368' />
                <format attr='maxheight' value='368' />
                <format attr='minwidth' value='360' />
                <format attr='maxwidth' value='360' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='368' />
                <format attr='maxheight' value='368' />
                <format attr='minwidth' value='360' />
                <format attr='maxwidth' value='360' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.5487293004989624' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='368' />
                <format attr='maxheight' value='368' />
                <format attr='minwidth' value='360' />
                <format attr='maxwidth' value='360' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values] + [federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values])</rows>
        <cols>([federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk] / [federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Precision'>
      <table>
        <view>
          <datasources>
            <datasource caption='KNN' name='federated.1ogj73k050xtn6158xpcx1gvdtun' />
          </datasources>
          <datasource-dependencies datasource='federated.1ogj73k050xtn6158xpcx1gvdtun'>
            <column datatype='real' name='[100]' role='measure' type='quantitative' />
            <column datatype='real' name='[150]' role='measure' type='quantitative' />
            <column datatype='real' name='[200]' role='measure' type='quantitative' />
            <column datatype='real' name='[250]' role='measure' type='quantitative' />
            <column datatype='real' name='[290]' role='measure' type='quantitative' />
            <column datatype='real' name='[50]' role='measure' type='quantitative' />
            <column datatype='string' name='[KNN]' role='dimension' type='nominal' />
            <column-instance column='[KNN]' derivation='None' name='[none:KNN:nk]' pivot='key' type='nominal' />
            <column-instance column='[100]' derivation='Sum' name='[sum:100:qk]' pivot='key' type='quantitative' />
            <column-instance column='[150]' derivation='Sum' name='[sum:150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[200]' derivation='Sum' name='[sum:200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[250]' derivation='Sum' name='[sum:250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[290]' derivation='Sum' name='[sum:290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[50]' derivation='Sum' name='[sum:50:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:50:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:100:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:150:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:200:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:250:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:290:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:50:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:100:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:150:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:200:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:250:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:290:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:KNN:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;f1-score (macro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;f1-score (micro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;f1-score (weighted)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;recall (macro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;recall (micro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;recall (weighted)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' value='15' />
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' value='15' />
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' value='15' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='321' />
                <format attr='maxheight' value='321' />
                <format attr='minwidth' value='360' />
                <format attr='maxwidth' value='360' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.59270715713500977' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values] + [federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values])</rows>
        <cols>([federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk] / [federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Recall'>
      <table>
        <view>
          <datasources>
            <datasource caption='KNN' name='federated.1ogj73k050xtn6158xpcx1gvdtun' />
          </datasources>
          <datasource-dependencies datasource='federated.1ogj73k050xtn6158xpcx1gvdtun'>
            <column datatype='real' name='[100]' role='measure' type='quantitative' />
            <column datatype='real' name='[150]' role='measure' type='quantitative' />
            <column datatype='real' name='[200]' role='measure' type='quantitative' />
            <column datatype='real' name='[250]' role='measure' type='quantitative' />
            <column datatype='real' name='[290]' role='measure' type='quantitative' />
            <column datatype='real' name='[50]' role='measure' type='quantitative' />
            <column datatype='string' name='[KNN]' role='dimension' type='nominal' />
            <column-instance column='[KNN]' derivation='None' name='[none:KNN:nk]' pivot='key' type='nominal' />
            <column-instance column='[100]' derivation='Sum' name='[sum:100:qk]' pivot='key' type='quantitative' />
            <column-instance column='[150]' derivation='Sum' name='[sum:150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[200]' derivation='Sum' name='[sum:200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[250]' derivation='Sum' name='[sum:250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[290]' derivation='Sum' name='[sum:290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[50]' derivation='Sum' name='[sum:50:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:50:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:100:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:150:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:200:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:250:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:290:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:50:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:100:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:150:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:200:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:250:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ogj73k050xtn6158xpcx1gvdtun].[sum:290:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:KNN:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;f1-score (macro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;f1-score (micro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;f1-score (weighted)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;precision (macro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;precision (micro)&quot;' />
                <groupfilter function='member' level='[none:KNN:nk]' member='&quot;precision (weighted)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='height' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' value='53' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]' value='15' />
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' value='15' />
            <format attr='font-size' field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' value='15' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='348' />
                <format attr='maxheight' value='348' />
                <format attr='minwidth' value='360' />
                <format attr='maxwidth' value='360' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values] + [federated.1ogj73k050xtn6158xpcx1gvdtun].[Multiple Values])</rows>
        <cols>([federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk] / [federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard KNN'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='33625' id='1' name='Precision' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32000' id='7' name='Recall' show-title='false' w='98400' x='800' y='34625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32375' id='8' name='F1-Score' show-title='false' w='98400' x='800' y='66625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='F1-Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]</field>
            <field>[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]</field>
            <field>[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Precision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ogj73k050xtn6158xpcx1gvdtun].[:Measure Names]</field>
            <field>[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard KNN'>
      <viewpoints>
        <viewpoint name='F1-Score'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Precision'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ogj73k050xtn6158xpcx1gvdtun].[none:KNN:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard KNN' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='F1-Score' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Precision' width='192'>
      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
      nTLqQRDtnc0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
      YhopAElM81+e/HW29gd0lAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
